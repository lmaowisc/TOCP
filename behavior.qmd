---
title: "Adoption and Maintenance of Behavior (Aim 2)"
format: 
  html:
    toc: true
    toc-depth: 4
    css: styles.css
editor: visual
execute:
  echo: false
  warning: false
  cache: true
---


```{r}
library(tidyverse)
library(knitr)
library(kableExtra)
library(gtsummary)
library(gt)
library(labelled)
library(patchwork)
library(readxl)

refmt <- function(var, fmt){
  plyr::revalue(as.factor(var), fmt)
}
miss99 <- function(x){
  as.numeric(if_else(x == 99, NA, x))
}
miss999 <- function(x){
  as.numeric(if_else(x == 999, NA, x))
}

# Calculator of fiber/salad/vegetable-soup/whole-wheat intake score
# 0.5 1 1 1.5 2 3
fiber_score <- function(x) 
  case_when(
    x == 1 ~ 0.5,
    x == 2 ~ 1,
    x == 3 ~ 1,
    x == 4 ~ 1.5,
    x == 5 ~ 2,
    x == 6 ~ 3,
    TRUE ~ NA
  )

# Calculator of Potatoes/oatmeal/vegetables intake score
# 1 1 1.5 2 3 5
potatoes_score <- function(x) 
  case_when(
    x == 1 ~ 1,
    x == 2 ~ 1,
    x == 3 ~ 1.5,
    x == 4 ~ 2,
    x == 5 ~ 3,
    x == 6 ~ 5,
    TRUE ~ NA
  )

# Calculator of  Vegetable juice intake score
# 0 0 0 0 0 3
veggie_juice_score <- function(x) 
  case_when(
    x == 1 ~ 0,
    x == 2 ~ 0,
    x == 3 ~ 0,
    x == 4 ~ 0,
    x == 5 ~ 0,
    x == 6 ~ 3,
    TRUE ~ NA
  )

# Calculator of fiber cereal intake score
# 2 2 4 6 7 12
fiber_cereal_score <- function(x) 
  case_when(
    x == 1 ~ 2,
    x == 2 ~ 2,
    x == 3 ~ 4,
    x == 4 ~ 6,
    x == 5 ~ 7,
    x == 6 ~ 12,
    TRUE ~ NA
  )

# Calculator of beans intake score
# 2 2 3 5 6 10
beans_score <- function(x) 
  case_when(
    x == 1 ~ 2,
    x == 2 ~ 2,
    x == 3 ~ 3,
    x == 4 ~ 5,
    x == 5 ~ 6,
    x == 6 ~ 10,
    TRUE ~ NA
  )

# Pad use
# 1 usecontainprod_bl___1 I use panty
# liners
# 2 usecontainprod_bl___2 I use pads
# 3 usecontainprod_bl___3 I use
# undergarments
# (like Depends or
# diapers)4 usecontainprod_bl___4 I use something
# else
# 5 usecontainprod_bl___5 I do not use
# anything

# incont_money_bl
# 0 None
# 1 Less than $5
# 2 $5 - $10
# 3 $11 - $20
# 4 $21 - $30
# 5 $31 - $50
# 6 $51 - $100
# 7 $101 - $200
# 8 More than $200
# 99 Choose not to answer (set to missing)
money_fmt <- c(
  "0" = "None",
  "1" = "Less than $5",
  "2" = "$5 - $10",
  "3" = "$11 - $20",
  "4" = "$21 - $30",
  "5" = "$31 - $50",
  "6" = "$51 - $100",
  "7" = "$101 - $200",
  "8" = "More than $200",
  "99" = NA
)

# daytimevoids_bl
# 1 less than 4 times per day
# 2 4-5 times
# 3 6-8 times
# 4 9-10 times
# 5 11-12 times
# 6 more than 12 times per day
# 99 Choose not to answer
daytimevoids_fmt <- c(
  "1" = "Less than 4 times per day",
  "2" = "4-5 times",
  "3" = "6-8 times",
  "4" = "9-10 times",
  "5" = "11-12 times",
  "6" = "More than 12 times per day",
  "99" = NA
)

# voidinterval_bl
# 1 4 hours or more
# 2 3 hours
# 3 2 hours
# 4 1 hour5 less than 1 hour
# 99 Choose not to answer
voidinterval_fmt <- c(
  "1" = "4 hours or more",
  "2" = "3 hours",
  "3" = "2 hours",
  "4" = "1 hour",
  "5" = "Less than 1 hour",
  "99" = NA
)

# fvq_bmconst_bl
# please make into 3
# categories: never / occ,
# sometimes, and most / all the
# time for analyses
# 1 Never
# 2 Occasionally3 Sometimes
# 4 Most of the time
# 5 All the time
# 99 Choose not to answer

bmconst_fmt <- c(
  "1" = "Never/Occasionally",
  "2" = "Never/Occasionally",
  "3" = "Sometimes",
  "4" = "Most/All the time",
  "5" = "Most/All the time",
  "99" = NA
)

# fvq_bmconsist_bl
# report as continuous and also in 3 categories: 1-2 (firm); 3-4 (normal), 5-7 (loose)
bmconsist_fmt <- c(
  "1" = "Firm",
  "2" = "Firm",
  "3" = "Normal",
  "4" = "Normal",
  "5" = "Loose",
  "6" = "Loose",
  "7" = "Loose",
  "99" = NA
)

# Ever talked to healthcare provider about urine
# 0 No
# 1 Yes, but it was not very helpful
# 2 Yes, and it was helpful
# 99 Choose not to answer
seekhelp_fmt <- c(
  "0" = "No",
  "1" = "Yes, but it was not very helpful",
  "2" = "Yes, and it was helpful",
  "99" = NA
)

# Types of urinary incontinence
# if 1 = no UI, if 2 = urge UI, if 3 and/or 5 = stress UI; if 2 AND (3 or 5) =  mixed UI; all others = other UI

# Function to categorize UI

ui_type <- function(x1, x2, x3, x4, x5, x99){
  y <- ifelse(x1 == 1, "No UI",
         ifelse(x2 == 1 & (x3 == 1 | x5 == 1), "Mixed UI",
                ifelse(x2 == 1, "Urge UI",
                       ifelse(x3 == 1 | x5 == 1, "Stress UI",
                              ifelse(x99 == 1, NA, "Other UI")))))
  factor(y, levels = c("No UI", "Urge UI", "Stress UI",  "Mixed UI", "Other UI"))
}

```

```{r}
tmp1m <- read_excel("data/Merged_Baseline_and_1_month_Data_4_26_24_note_as_of_4_26_393_completed_1mo_all_393_in_here_v2.xlsx", sheet = 1) |> 
  mutate(
    study_id = as.character(study_id)
  )
tmp3mT <- read_csv("data/ArmT3m.csv")
tmp3mC <- read_csv("data/ArmC3m.csv")
tmp6mT <- read_csv("data/ArmT6m.csv")
tmp6mC <- read_csv("data/ArmC6m.csv")


# <!-- psq_1mo (program satisfaction) -->
# <!-- # 1 Completely satis�ed -->
# <!-- # 2 Somewhat satis�ed -->
# <!-- # 3 Not at all satis�ed -->
# <!-- # 99 Choose not to answer -->

psq_fmt <- c(
  "1" = "Completely satisfied",
  "2" = "Somewhat satisfied",
  "3" = "Not at all satisfied",
  "99" = NA
)

gpi_fmt <- c(
  "1" = "Much better",
  "2" = "Better",
  "3" = "About the same",
  "4" = "Worse",
  "5" = "Much worse",
  "99" = NA
)  

recwotg_fmt <- c(
  "1" = "Yes",
  "2" = "No",
  "99" = NA
)

armfmt <- c("1" = "Control", "2" = "Tailored")

# hapa_intentions: 
# 0 I DID NOT THINK ABOUT making any
# changes.
# 1 I THOUGHT about making changes.
# 2 I PLANNED to make changes.
# 3 I MADE changes.
# 4 My changes BECAME MY NEW ROUTINE.
# 99 Choose not to answer (set to missing)

hapa_fmt <- c(
  "0" = "I did not think about making any changes",
  "1" = "I thought about making changes",
  "2" = "I planned to make changes",
  "3" = "I made changes",
  "4" = "My changes became my new routine",
  "99" = NA
)

# 0 I am NOT PLANNING TO make any
# changes.
# 1 I MIGHT make a change.
# 2 I PLAN TO make a change.
# 3 I WILL KEEP ON making changes.
# 4 I WILL CONTINUE MY NEW ROUTINE.
# 99 Choose not to answer (set to missing)

hapa_fmt2 <- c(
  "0" = "I am not planning to make any changes",
  "1" = "I might make a change",
  "2" = "I plan to make a change",
  "3" = "I will keep on making changes",
  "4" = "I will continue my new routine",
  "99" = NA
)

# 0 I am not worried about bladder or bowel
# problems getting worse as I get older.
# 1 If I make changes now, I can prevent
# bladder or bowel problems in the future.
# 2 I will have bladder or bowel problems as I
# get older no matter what I do now.
# 99 Choose not to answer (set to missing)

hapa_older_fmt <- c(
  "0" = "Not worried about bladder/bowel problems getting worse",
  "1" = "If I make changes now, I can prevent problems",
  "2" = "I will have bladder/bowel problems no matter what",
  "99" = NA
)


# Coping self-efficacy
# 0 When I make a plan, I stick to it, even if I
# am tired or busy with other things.
# 1 Even when I make a plan, other things can
# get in the way of me following through
# with the plan.
# 99 Choose not to answer (set to missing)
hapa_sticktoplan_fmt <- c(
  "0" = "When I make a plan, I stick to it",
  "1" = "Other things can get in the way",
  "99" = NA
)

# Perceived support 
# 0 I will have the support and resources I
# need to meet my goals.
# 1 It will be hard for me to meet my goals
# because I don't have the support or
# resources I need.
# 99 Choose not to answer (set to missing)

hapa_resources_fmt <- c(
  "0" = "I will have the support and resources for my goals",
  "1" = "I lack support or resources to meet my goals",
  "99" = NA
)

# fiber_guess
# radio, Required
# 1 Less than I should
# 2 About what I should
# 3 More than I should
#  99 Choose not to answer (set to missing)
fiber_fmt <- c(
  "1" = "Less than I should",
  "2" = "About what I should",
  "3" = "More than I should",
  "99" = NA
)


df_beh <- tmp1m |> 
  left_join(tmp3mT, by = "study_id") |>
  left_join(tmp3mC, by = "study_id") |>
  left_join(tmp6mT, by = "study_id") |>
  left_join(tmp6mC, by = "study_id") 

```

```{r}
# UI knowledge score
# know_pads_bl, know_pads_1mo, know_pads_3mo, know_pads_3mo_t, know_pads_6mo, know_pads_6mo_t
# know_exercises_bl, know_exercises_1mo, know_exercises_3mo, know_exercises_3mo_t, know_exercises_6mo, know_exercises_6mo_t
# know_weight_bl, know_weight_1mo, know_weight_3mo, know_weight_3mo_t, know_weight_6mo, know_weight_6mo_t
# know_oncestart_bl, know_oncestart_1mo, know_oncestart_3mo, know_oncestart_3mo_t, know_oncestart_6mo, know_oncestart_6mo_t
# know_nonsurgery_bl, know_nonsurgery_1mo, know_nonsurgery_3mo, know_nonsurgery_3mo_t, know_nonsurgery_6mo, know_nonsurgery_6mo_t

## Function to calculate  UI score
ui_score <- function(know_pads, know_exercises, know_weight, know_oncestart, know_nonsurgery){
  
  score <- (know_pads == 2) +
           (know_exercises == 1) +
           (know_weight == 1) +
           (know_oncestart == 2) +
           (know_nonsurgery == 2)
  
  score
}

# Create a unified variable for UI knowledge 
df_beth0 <- df_beh |> 
  mutate(
    # UI knowledge
    know_pads_3mo = coalesce(know_pads_3mo, know_pads_3mo_t),
    know_pads_6mo = coalesce(know_pads_6mo, know_pads_6mo_t),
    know_exercises_3mo = coalesce(know_exercises_3mo, know_exercises_3mo_t),
    know_exercises_6mo = coalesce(know_exercise_6mo, know_exercises_6mo_t),
    know_weight_3mo = coalesce(know_weight_3mo, know_weight_3mo_t),
    know_weight_6mo = coalesce(know_weight_6mo, know_weight_6mo_t),
    know_oncestart_3mo = coalesce(know_oncestart_3mo, know_oncestart_3mo_t),
    know_oncestart_6mo = coalesce(know_oncestart_6mo, know_oncestart_6mo_t),
    know_nonsurgery_3mo = coalesce(know_nonsurgery_3mo, know_nonsurgery_3mo_t),
    know_nonsurgery_6mo = coalesce(know_nonsurgery_6mo, know_nonsurgery_6mo_t),
    # Behavior change
    # Last month
    hapa_intentions_last_bl = hapa_intentions_bl,
    hapa_intentions_last_1mo = hapa_intentions_last_1mo,
    hapa_intentions_last_3mo = coalesce(hapa_intentions_last_3mo, hapa_intentions_last_3mo_t),
    hapa_intentions_last_6mo = coalesce(hapa_intentions_last_6mo, hapa_intentions_last_6mo_t),
    across(
      starts_with("hapa_intentions_last"), ~ refmt(., hapa_fmt)
    ),
    # Next month
    hapa_intentions_plans_bl = hapa_intentions_bl_2,
    hapa_intentions_plans_1mo = hapa_intentions_plans_1mo,
    hapa_intentions_plans_3mo = coalesce(hapa_intentions_plans_3mo, hapa_intentions_plans_3mo_t),
    hapa_intentions_plans_6mo = coalesce(hapa_intentions_plans_6mo, hapa_intentions_plans_6mo_t),
    across(
      starts_with("hapa_intentions_plans"), ~ refmt(., hapa_fmt2)
    ),
    # Risk perception
    hapa_older_bl = hapa_older_bl,
    hapa_older_1mo = hapa_older_1mo,
    hapa_older_3mo = coalesce(hapa_older_3mo, hapa_older_3mo_t),
    hapa_older_6mo = NA,
    across(
      starts_with("hapa_older"), ~ refmt(., hapa_older_fmt)
    ),
    # Coping self-efficacy 
    hapa_sticktoplan_bl = hapa_sticktoplan_bl,
    hapa_sticktoplan_1mo = hapa_sticktoplan_1mo,
    hapa_sticktoplan_3mo = coalesce(hapa_sticktoplan_3mo, hapa_sticktoplan_3mo_t),
    hapa_sticktoplan_6mo = NA,
    across(
      starts_with("hapa_sticktoplan"), ~ refmt(., hapa_sticktoplan_fmt)
    ),
    # Perceived support
    hapa_resources_bl = hapa_resources_bl,
    hapa_resources_1mo = hapa_resources_1mo,
    hapa_resources_3mo = coalesce(hapa_resources_3mo, hapa_resources_3mo_t),
    hapa_resources_6mo = NA,
    across(
      starts_with("hapa_resources"), ~ refmt(., hapa_resources_fmt)
    ),
    # Self-reported Program use
    bitus_lastmo_bl = NA,
    bitus_intend_bl = miss99(bitus_intend_bl),
    bitus_predict_bl = miss99(bitus_predict_bl),
    bitus_lastmo_1mo = miss99(bitus_lastmo_1mo),
    bitus_intend_1mo = miss99(bitus_intend_1mo),
    bitus_predict_1mo = miss99(bitus_predict_1mo),
    bitus_lastmo_3mo = miss99(coalesce(bitus_lastmo_3mo, bitus_lastmo_3mo_t)),
    bitus_intend_3mo = miss99(coalesce(bitus_intend_3mo, bitus_intend_3mo_t)),
    bitus_predict_3mo = miss99(coalesce(bitus_predict_3mo, bitus_predict_3mo_t)),
    bitus_lastmo_6mo = miss99(coalesce(bitus_lastmo_6mo, bitus_lastmo_6mo_t)),
    bitus_intend_6mo = miss99(coalesce(bitus_intend_6mo, bitus_intend_6mo_t)),
    bitus_predict_6mo = NA,
    # Current Health Behaviors
    # Questions are about thing s you do that may impact bladde r or bowe l he alth.
      # Kegels requency score (1-6)
    kegel_freq_bl = miss99(kegel_freq_bl), # 1-6
    kegel_freq_1mo = miss99(kegel_freq_1mo),
    kegel_freq_3mo = miss99(coalesce(kegel_freq_3mo, kegel_freq_3mo_t)),
    kegel_freq_6mo = miss99(coalesce(kegel_freq_6mo, kegel_freq_6mo_t)),
      # Perceived fiber intake
    fiber_guess_bl = fiber_guess_bl,
    fiber_guess_1mo = fiber_guess_1mo,
    fiber_guess_3mo = coalesce(fiber_guess_3mo, fiber_guess_3mo_t),
    fiber_guess_6mo = coalesce(fiber_guess_6mo, fiber_guess_6mo_t),
    across(
      starts_with("fiber_guess"), ~ refmt(., fiber_fmt)
    ),
    # Perceived fluid intake
    fluid_guess_bl = fluid_guess_bl,
    fluid_guess_1mo = fluid_guess_1mo,
    fluid_guess_3mo = coalesce(fluid_guess_3mo, fluid_guess_3mo_t),
    fluid_guess_6mo = coalesce(fluid_guess_6mo, fluid_guess_6mo_t),
    across(
      starts_with("fluid_guess"), ~ refmt(., fiber_fmt)
    ),
    # Estimated daily fluid intake
    est_totalfluid_bl = miss999(est_totalfluid_bl),
    est_totalfluid_1mo = miss999(est_totalfluid_1mo),
    est_totalfluid_3mo = miss999(coalesce(est_totalfluid_3mo, est_totalfluid_3mo_t)),
    est_totalfluid_6mo = miss999(coalesce(est_totalfluid_6mo, est_totalfluid_6mo_t)),
    # Estimated coffee servings score (0-5)
    freq_coffee_bl = miss99(freq_coffee_bl),
    freq_coffee_1mo = miss99(freq_coffee_1mo),
    freq_coffee_3mo = miss99(coalesce(freq_coffee_3mo, freq_coffee_3mo_t)),
    freq_coffee_6mo = miss99(coalesce(freq_coffee_6mo, freq_coffee_6mo_t)),
    # Estimated soda servings score (0-5)
    freq_soda_bl = miss99(freq_soda_bl),
    freq_soda_1mo = miss99(freq_soda_1mo),
    freq_soda_3mo = miss99(coalesce(freq_soda_3mo, freq_soda_3mo_t)),
    freq_soda_6mo = miss99(coalesce(freq_soda_6mo, freq_soda_6mo_t)),
    # How much fiber you get through foods you eat
    # Calculated from these variables
    # Fruit
    fruit_bl = fiber_score(fruit_bl),
    fruit_1mo = fiber_score(fruit_1mo),
    fruit_3mo = fiber_score(coalesce(fruit_3mo, fruit_3mo_t)),
    fruit_6mo = fiber_score(coalesce(fruit_6mo, fruit_6mo_t)),
    # Green salad
    grnsalad_bl = fiber_score(grnsalad_bl),
    grnsalad_1mo = fiber_score(grnsalad_1mo),
    grnsalad_3mo = fiber_score(coalesce(grnsalad_3mo, grnsalad_3mo_t)),
    grnsalad_6mo = fiber_score(coalesce(grnsalad_6mo, grnsalad_6mo_t)),
    # Potatoes or oatmeal
    potato_bl = potatoes_score(potato_bl),
    potato_1mo = potatoes_score(potato_1mo),
    potato_3mo = potatoes_score(coalesce(potato_3mo, potato_3mo_t)),
    potato_6mo = potatoes_score(coalesce(potato_6mo, potato_6mo_t)),
    # Vegetables
    vegetable_bl = potatoes_score(vegetable_bl),
    vegetable_1mo = potatoes_score(vegetable_1mo),
    vegetable_3mo = potatoes_score(coalesce(vegetable_3mo, vegetable_3mo_t)),
    vegetable_6mo = potatoes_score(coalesce(vegetable_6mo, vegetable_6mo_t)),
    # Vegetable juice
    vegetjuice_bl = veggie_juice_score(vegetjuice_bl),
    vegetjuice_1mo = veggie_juice_score(vegetjuice_1mo),
    vegetjuice_3mo = veggie_juice_score(coalesce(vegetjuice_3mo, vegetjuice_3mo_t)),
    vegetjuice_6mo = veggie_juice_score(coalesce(vegetjuice_6mo, vegetjuice_6mo_t)),
    # Vegetable soup
    vegetsoup_bl = fiber_score(vegetsoup_bl),
    vegetsoup_1mo = fiber_score(vegetsoup_1mo),
    vegetsoup_3mo = fiber_score(coalesce(vegetsoup_3mo, vegetsoup_3mo_t)),
    vegetsoup_6mo = fiber_score(coalesce(vegetsoup_6mo, vegetsoup_6mo_t)),
    # Cereal
    cereal_bl = fiber_cereal_score(cereal_bl),
    cereal_1mo = fiber_cereal_score(cereal_1mo),
    cereal_3mo = fiber_cereal_score(coalesce(cereal_3mo, cereal_3mo_t)),
    cereal_6mo = fiber_cereal_score(coalesce(cereal_6mo, cereal_6mo_t)),
    # Whole wheat bread
    wheat_bread_bl = fiber_score(wheat_bread_bl),
    wheat_bread_1mo = fiber_score(wheat_bread_1mo),
    wheat_bread_3mo = fiber_score(coalesce(wheat_bread_3mo, wheat_bread_3mo_t)),
    wheat_bread_6mo = fiber_score(coalesce(wheat_bread_6mo, wheat_bread_6mo_t)),
    # Beans
    beans_bl = beans_score(beans_bl),
    beans_1mo = beans_score(beans_1mo),
    beans_3mo = beans_score(coalesce(beans_3mo, beans_3mo_t)),
    beans_6mo = beans_score(coalesce(beans_6mo, beans_6mo_t)),
    # Create total fiber score
    fiber_score_bl = fruit_bl + grnsalad_bl + potato_bl + vegetable_bl + vegetjuice_bl + vegetsoup_bl + cereal_bl + wheat_bread_bl + beans_bl,
    fiber_score_1mo = fruit_1mo + grnsalad_1mo + potato_1mo + vegetable_1mo + vegetjuice_1mo + vegetsoup_1mo + cereal_1mo + wheat_bread_1mo + beans_1mo,
    fiber_score_3mo = fruit_3mo + grnsalad_3mo + potato_3mo + vegetable_3mo + vegetjuice_3mo + vegetsoup_3mo + cereal_3mo + wheat_bread_3mo + beans_3mo,
    fiber_score_6mo = fruit_6mo + grnsalad_6mo + potato_6mo + vegetable_6mo + vegetjuice_6mo + vegetsoup_6mo + cereal_6mo + wheat_bread_6mo + beans_6mo,
    # Pad use
    panty_liner_bl = usecontainprod_bl___1,
    pads_bl = usecontainprod_bl___2,
    undergarments_bl = usecontainprod_bl___3,
    something_else_bl = usecontainprod_bl___4,
    nothing_bl = usecontainprod_bl___5,
    panty_liner_1mo = usecontainprod_1mo___1,
    pads_1mo = usecontainprod_1mo___2,
    undergarments_1mo = usecontainprod_1mo___3,
    something_else_1mo = usecontainprod_1mo___4,
    nothing_1mo = usecontainprod_1mo___5,
    panty_liner_3mo = coalesce(usecontainprod_3mo___1, usecontainprod_3mo_t___1),
    pads_3mo = coalesce(usecontainprod_3mo___2, usecontainprod_3mo_t___2),
    undergarments_3mo = coalesce(usecontainprod_3mo___3, usecontainprod_3mo_t___3),
    something_else_3mo = coalesce(usecontainprod_3mo___4, usecontainprod_3mo_t___4),
    nothing_3mo = coalesce(usecontainprod_3mo___5, usecontainprod_3mo_t___5),
    panty_liner_6mo = coalesce(usecontainprod_6mo___1, usecontainprod_6mo_t___1),
    pads_6mo = coalesce(usecontainprod_6mo___2, usecontainprod_6mo_t___2),
    undergarments_6mo = coalesce(usecontainprod_6mo___3, usecontainprod_6mo_t___3),
    something_else_6mo = coalesce(usecontainprod_6mo___4, usecontainprod_6mo_t___4),
    nothing_6mo = coalesce(usecontainprod_6mo___5, usecontainprod_6mo_t___5),
    # How many
    # Panty liners per 24 hours
    use_liner_bl = miss99(use_liner_bl),
    use_liner_1mo = miss99(use_liner_1mo),
    use_liner_3mo = miss99(coalesce(parse_number(use_liner_3mo), use_liner_3mo_t)),
    use_liner_6mo = miss99(coalesce(use_liner_6mo, use_liner_6mo_t)),
    # Pads per 24 hours
    use_pads_bl = miss99(use_pads_bl),
    use_pads_1mo = miss99(use_pads_1mo),
    use_pads_3mo = miss99(coalesce(use_pads_3mo, use_pads_3mo_t)),
    use_pads_6mo = miss99(coalesce(use_pads_6mo, parse_number(use_pads_6mo_t))),
    # Undergarments per 24 hours
    use_depends_bl = miss99(use_depends_bl),
    use_depends_1mo = miss99(use_depends_1mo),
    use_depends_3mo = miss99(coalesce(use_depends_3mo, use_depends_3mo_t)),
    use_depends_6mo = miss99(coalesce(parse_number(use_depends_6mo), use_depends_6mo_t)),
    # Estimated money spent in the last month
    incont_money_bl = refmt(incont_money_bl, money_fmt),
    incont_money_1mo = refmt(incont_money_1mo, money_fmt),
    incont_money_3mo = refmt(coalesce(incont_money_3mo, incont_money_3mo_t), money_fmt),
    incont_money_6mo = refmt(coalesce(incont_money_6mo, incont_money_6mo_t), money_fmt),
    # On an average night
    # Estimated voids overnight
    voidsovernight_bl = miss99(voidsovernight_bl),
    voidsovernight_1mo = miss99(voidsovernight_1mo),
    voidsovernight_3mo = miss99(coalesce(voidsovernight_3mo, voidsovernight_3mo_t)),
    voidsovernight_6mo = miss99(coalesce(voidsovernight_6mo, voidsovernight_6mo_t)),
    # Estimated voids during the day
    daytimevoids_bl = refmt(daytimevoids_bl, daytimevoids_fmt),
    daytimevoids_1mo = refmt(daytimevoids_1mo, daytimevoids_fmt),
    daytimevoids_3mo = refmt(coalesce(daytimevoids_3mo, daytimevoids_3mo_t), daytimevoids_fmt),
    daytimevoids_6mo = refmt(coalesce(daytimevoids_6mo, daytimevoids_6mo_t), daytimevoids_fmt),
    # Time between trips to toilet
    voidinterval_bl = refmt(voidinterval_bl, voidinterval_fmt),
    voidinterval_1mo = refmt(voidinterval_1mo, voidinterval_fmt),
    voidinterval_3mo = refmt(coalesce(voidinterval_3mo, voidinterval_3mo_t), voidinterval_fmt),
    voidinterval_6mo = refmt(coalesce(voidinterval_6mo, voidinterval_6mo_t), voidinterval_fmt),
    
    # Current Symptoms
    # Constipation frequency last month
    fvq_bmconst_bl = refmt(fvq_bmconst_bl, bmconst_fmt),
    fvq_bmconst_1mo = refmt(fvq_bmconst_1mo, bmconst_fmt),
    fvq_bmconst_3mo = refmt(coalesce(fvq_bmconst_3mo, fvq_bmconst_3mo_t), bmconst_fmt),
    fvq_bmconst_6mo = refmt(coalesce(fvq_bmconst_6mo, fvq_bmconst_6mo_t), bmconst_fmt),
    # Diarrhea frequency last month
    fvq_bmdiarr_bl = refmt(fvq_bmdiarr_bl, bmconst_fmt),
    fvq_bmdiarr_1mo = refmt(fvq_bmdiarr_1mo, bmconst_fmt),
    fvq_bmdiarr_3mo = refmt(coalesce(fvq_bmdiarr_3mo, fvq_bmdiarr_3mo_t), bmconst_fmt),
    fvq_bmdiarr_6mo = refmt(coalesce(fvq_bmdiarr_6mo, fvq_bmdiarr_6mo_t), bmconst_fmt),
    # Bristol stool type score (1-7)
    fvq_bmconsist_bl = miss99(fvq_bmconsist_bl),
    fvq_bmconsist_1mo = miss99(fvq_bmconsist_1mo),
    fvq_bmconsist_3mo = miss99(coalesce(fvq_bmconsist_3mo, fvq_bmconsist_3mo_t)),
    fvq_bmconsist_6mo = miss99(coalesce(fvq_bmconsist_6mo, fvq_bmconsist_6mo_t)),
    # Bristol stool type category
    # 1-2 (firm); 3-4 (normal), 5-7 (loose)
    fvq_bmconsist_cat_bl = refmt(fvq_bmconsist_bl, bmconsist_fmt),
    fvq_bmconsist_cat_1mo = refmt(fvq_bmconsist_1mo, bmconsist_fmt),
    fvq_bmconsist_cat_3mo = refmt(coalesce(fvq_bmconsist_3mo, fvq_bmconsist_3mo_t), bmconsist_fmt),
    fvq_bmconsist_cat_6mo = refmt(coalesce(fvq_bmconsist_6mo, fvq_bmconsist_6mo_t), bmconsist_fmt),
    # Types of urinary incontinence
    # if 1 = no UI, if 2 = urge UI, if 3 and/or 5 = stress UI; if 2 AND (3 or 5) =  mixed UI; all others = other UI
    iciqui_urineleak_cat_bl = ui_type(iciqui_urineleak_bl___1, iciqui_urineleak_bl___2, iciqui_urineleak_bl___3, iciqui_urineleak_bl___4, iciqui_urineleak_bl___5, iciqui_urineleak_bl___99),
    iciqui_urineleak_cat_1mo = ui_type(iciqui_urineleak_1mo___1, iciqui_urineleak_1mo___2, iciqui_urineleak_1mo___3, iciqui_urineleak_1mo___4, iciqui_urineleak_1mo___5, iciqui_urineleak_1mo___99),
    iciqui_urineleak_cat_3mo = ui_type(coalesce(iciqui_urineleak_3mo___1, iciqui_urineleak_3mo_t___1), coalesce(iciqui_urineleak_3mo___2, iciqui_urineleak_3mo_t___2), coalesce(iciqui_urineleak_3mo___3, iciqui_urineleak_3mo_t___3), coalesce(iciqui_urineleak_3mo___4, iciqui_urineleak_3mo_t___4), coalesce(iciqui_urineleak_3mo___5, iciqui_urineleak_3mo_t___5), coalesce(iciqui_urineleak_3mo___99, iciqui_urineleak_3mo_t___99)),
    iciqui_urineleak_cat_6mo = ui_type(coalesce(iciqui_urineleak_6mo___1, iciqui_urineleak_6mo_t___1), coalesce(iciqui_urineleak_6mo___2, iciqui_urineleak_6mo_t___2), coalesce(iciqui_urineleak_6mo___3, iciqui_urineleak_6mo_t___3), coalesce(iciqui_urineleak_6mo___4, iciqui_urineleak_6mo_t___4), coalesce(iciqui_urineleak_6mo___5, iciqui_urineleak_6mo_t___5), coalesce(iciqui_urineleak_6mo___99, iciqui_urineleak_6mo_t___99)),
    
    
    
    # Ever talked to healthcare provider about urine
    bladderseekhx_bl  = refmt(bladderseekhx_bl, seekhelp_fmt ),
    bladderseekhx_1mo = NA,
    bladderseekhx_3mo = refmt(coalesce(bladderseekhx_3mo, bladderseekhx_3mo_t), seekhelp_fmt ),
    bladderseekhx_6mo = refmt(coalesce(bladderseekhx_6mo, bladderseekhx_6mo_t), seekhelp_fmt ),
    # Ever talked to healthcare provider about stool
    bowelseekhx_bl  = refmt(bowelseekhx_bl, seekhelp_fmt ),
    bowelseekhx_1mo = NA,
    bowelseekhx_3mo = refmt(coalesce(bowelseekhx_3mo, bowelseekhx_3mo_t), seekhelp_fmt ),
    bowelseekhx_6mo = refmt(coalesce(bowelseekhx_6mo, bowelseekhx_6mo_t), seekhelp_fmt ),
    
    # Randomization status
    rand_round_2 = refmt(rand_round_2, armfmt)
  ) 
  
# 
 # df_beth0 |>
 #   count(rand_round_2, iciqui_urineleak_cat_6mo)

# create UI scores at baseline, 1 month, 3 months, and 6 months
df_beh1 <- df_beth0 |> 
  mutate(
    ui_score_bl = ui_score(know_pads_bl, know_exercises_bl, know_weight_bl, know_oncestart_bl, know_nonsurgery_bl),
    ui_score_1mo = ui_score(know_pads_1mo, know_exercises_1mo, know_weight_1mo, know_oncestart_1mo, know_nonsurgery_1mo),
    ui_score_3mo = ui_score(know_pads_3mo, know_exercises_3mo, know_weight_3mo, know_oncestart_3mo, know_nonsurgery_3mo),
    ui_score_6mo = ui_score(know_pads_6mo, know_exercises_6mo, know_weight_6mo, know_oncestart_6mo, know_nonsurgery_6mo)
  )


df_behx <- df_beh1 |> 
  select(
   study_id, rand_round_2, 
   contains("ui_score"), 
   contains("hapa_intentions_last"),
   contains("hapa_intentions_plans"),
   contains("hapa_older"),
   contains("hapa_sticktoplan"),
   contains("hapa_resources"),
   contains("bitus_lastmo"),
   contains("bitus_intend"),
   contains("bitus_predict"),
   contains("kegel_freq"),
   contains("fiber_guess"),
   contains("fluid_guess"),
   contains("est_totalfluid"),
   contains("freq_coffee"),
   contains("freq_soda"),
   contains("fiber_score"),
   contains("panty_liner"),
   contains("pads"),
   contains("undergarments"),
   contains("something_else"),
   contains("nothing"),
   contains("use_liner"),
   contains("use_pads"),
   contains("use_depends"),
   contains("incont_money"),
   contains("voidsovernight"),
   contains("daytimevoids"),
   contains("voidinterval"),
   # Current Symptoms
   contains("fvq_bmconst"),
   contains("fvq_bmdiarr"),
   contains("fvq_bmconsist"),
   contains("fvq_bmconsist_cat"),
   # UI type
   contains("iciqui_urineleak_cat"),
   # Seek help
   contains("bladderseekhx"),
   contains("bowelseekhx")
   
   
   
   
   
   
  )
  
# Baseline
df_behx_bl <- df_behx |> 
  rename_with(~ str_remove(.x, "_bl$")) |> 
  select(
    study_id, rand_round_2, 
    ui_score, hapa_intentions_last, 
    hapa_intentions_plans, hapa_older,
    hapa_sticktoplan, hapa_resources,
    bitus_lastmo, bitus_intend, bitus_predict,
    kegel_freq, fiber_guess, fluid_guess,
    est_totalfluid, freq_coffee, freq_soda,
    fiber_score, 
    # pad use
    panty_liner, pads, undergarments, something_else, nothing,
    # how many
    use_liner, use_pads, use_depends,
    # money spent
    incont_money,
    voidsovernight, 
    daytimevoids, voidinterval,
    # Current Symptoms
    fvq_bmconst, fvq_bmdiarr, fvq_bmconsist, fvq_bmconsist_cat,
    # UI type
    iciqui_urineleak_cat,
    # Seek help
    bladderseekhx, bowelseekhx
    
  )

# 1 month
df_behx_1mo <- df_behx |> 
  rename_with(~ str_remove(.x, "_1mo$")) |> 
  select(
    study_id, rand_round_2, 
    ui_score, hapa_intentions_last, 
    hapa_intentions_plans, hapa_older,
    hapa_sticktoplan, hapa_resources,
    bitus_lastmo, bitus_intend, bitus_predict,
    kegel_freq, fiber_guess, fluid_guess,
    est_totalfluid, freq_coffee, freq_soda,
    fiber_score, 
    # pad use
    panty_liner, pads, undergarments, something_else, nothing,
    # how many
    use_liner, use_pads, use_depends,
    # money spent
    incont_money,
    voidsovernight, 
    daytimevoids, voidinterval,
    # Current Symptoms
    fvq_bmconst, fvq_bmdiarr, fvq_bmconsist, fvq_bmconsist_cat,
    # UI type
    iciqui_urineleak_cat,
    # Seek help
    bladderseekhx, bowelseekhx
  )

# 3 month
df_behx_3mo <- df_behx |> 
  rename_with(~ str_remove(.x, "_3mo$")) |> 
  select(
    study_id, rand_round_2, 
    ui_score, hapa_intentions_last, 
    hapa_intentions_plans, hapa_older,
    hapa_sticktoplan, hapa_resources,
    bitus_lastmo, bitus_intend, bitus_predict,
    kegel_freq, fiber_guess, fluid_guess,
    est_totalfluid, freq_coffee, freq_soda,
    fiber_score, 
    # pad use
    panty_liner, pads, undergarments, something_else, nothing,
    # how many
    use_liner, use_pads, use_depends,
    # money spent
    incont_money,
    voidsovernight, 
    daytimevoids, voidinterval,
    # Current Symptoms
    fvq_bmconst, fvq_bmdiarr, fvq_bmconsist, fvq_bmconsist_cat,
    # UI type
    iciqui_urineleak_cat,
    # Seek help
    bladderseekhx, bowelseekhx
  )

# 6 month
df_behx_6mo <- df_behx |> 
  rename_with(~ str_remove(.x, "_6mo$")) |> 
  select(
    study_id, rand_round_2, 
    ui_score, hapa_intentions_last, 
    hapa_intentions_plans, hapa_older,
    hapa_sticktoplan, hapa_resources,
    bitus_lastmo, bitus_intend, bitus_predict,
    kegel_freq, fiber_guess, fluid_guess,
    est_totalfluid, freq_coffee, freq_soda,
    fiber_score, 
    # pad use
    panty_liner, pads, undergarments, something_else, nothing,
    # how many
    use_liner, use_pads, use_depends,
    # money spent
    incont_money,
    voidsovernight, 
    daytimevoids, voidinterval,
    # Current Symptoms
    fvq_bmconst, fvq_bmdiarr, fvq_bmconsist, fvq_bmconsist_cat,
    # UI type
    iciqui_urineleak_cat,
    # Seek help
    bladderseekhx, bowelseekhx
  )

```

## UI knowledge and behavior change intentions

@tbl-ui-make-changes summarizes the longitudinal data on UI knowledge and behavior change intentions at baseline, 1 month, 3 months, and 6 months. 

```{r}
#| label: tbl-ui-make-changes
#| tbl-cap: "Longitudinal responses on UI knowledge and behavior change intentions."

# Function to tabulate cross-sectional data
# on UI scores and making changes
# at baseline, 1 month, 3 months, and 6 months

ui_make_changes_tbl <- function(df_behx_xx){

  df_behx_xx |> 
    tbl_summary(
      by = rand_round_2,
      include = c(
        ui_score, 
        hapa_intentions_last, 
        hapa_intentions_plans,
        hapa_older,
        hapa_sticktoplan,
        hapa_resources
      ),
      type = list(
        ui_score ~ "continuous",
        hapa_intentions_last ~ "categorical"
      ),
      label = list(
        ui_score ~ "UI Knowledge Score (0-5)",
        hapa_intentions_last ~ "Behavior Change Intention - Last Month",
        hapa_intentions_plans ~ "Behavior Change Plan - Next Month",
        hapa_older ~ "Risk Perception - As I get older",
        hapa_sticktoplan ~ "Coping Self-Efficacy",
        hapa_resources ~ "Perceived Support"
      ),
      statistic = all_continuous() ~ "{mean} ({sd})",
      digits = all_continuous() ~ 1
    ) |> 
    add_p() |> 
    italicize_levels() |> 
    bold_labels()

}

# Baseline
ui_tbl_base <- ui_make_changes_tbl(df_behx_bl) 
# 1 month
ui_tbl_1mo <- ui_make_changes_tbl(df_behx_1mo)
# 3 month
ui_tbl_3mo <- ui_make_changes_tbl(df_behx_3mo)
# 6 month
ui_tbl_6mo <- ui_make_changes_tbl(df_behx_6mo)

# combine tables
tbl_merge(list(ui_tbl_base, ui_tbl_1mo, ui_tbl_3mo, ui_tbl_6mo), 
          tab_spanner = c("Baseline", "1 Month", "3 Months", "6 Months")) 
```

@tbl-program-use summarizes the longitudinal data on self-reported program use at baseline, 1 month, 3 months, and 6 months.
```{r}
#| label: tbl-program-use
#| tbl-cap: "Longitudinal responses on self-reported program use."

# Function to tabulate cross-sectional data
# on self-reported program use
# at baseline, 1 month, 3 months, and 6 months

program_use_tbl <- function(df_behx_xx){

  df_behx_xx |> 
    tbl_summary(
      by = rand_round_2,
      include = c(bitus_lastmo, bitus_intend, bitus_predict),
      type = list(
        bitus_lastmo ~ "continuous",
        bitus_intend ~ "continuous",
        bitus_predict ~ "continuous"
      ),
      label = list(
        bitus_lastmo ~ "Last Month Score (0-5)",
        bitus_intend ~ "Intention to Use Score  (0-5)",
        bitus_predict ~ "Predicted Use Score  (0-5)"
      ),
      statistic = all_continuous() ~ "{mean} ({sd})",
      digits = all_continuous() ~ 1
    ) |> 
    add_p() |> 
    italicize_levels() |> 
    bold_labels()

}

# Baseline
program_use_tbl_base <- program_use_tbl(df_behx_bl)
# 1 month
program_use_tbl_1mo <- program_use_tbl(df_behx_1mo)
# 3 month
program_use_tbl_3mo <- program_use_tbl(df_behx_3mo)
# 6 month
program_use_tbl_6mo <- program_use_tbl(df_behx_6mo)
# combine tables
tbl_merge(list(program_use_tbl_base, program_use_tbl_1mo, program_use_tbl_3mo, program_use_tbl_6mo), 
          tab_spanner = c("Baseline", "1 Month", "3 Months", "6 Months"))

```



## Current health behaviors
@tbl-quest summarizes the longitudinal responses to questions about things you do that may impact bladder or bowel health at baseline, 1 month, 3 months, and 6 months.

```{r}
#| label: tbl-quest
#| tbl-cap: Longitudinal responses to questions about things you do that may impact bladder or bowel health.

# Function to tabulate cross-sectional data
# on questions about things you do
# that may impact bladder or bowel health
# at baseline, 1 month, 3 months, and 6 months
quest_tbl <- function(df_behx_xx){

  df_behx_xx |> 
    tbl_summary(
      by = rand_round_2,
      include = c(
        kegel_freq, fiber_guess, fluid_guess,
        est_totalfluid, freq_coffee, freq_soda, fiber_score
      ),
      type = list(
        kegel_freq ~ "continuous",
        fiber_guess ~ "categorical",
        fluid_guess ~ "categorical",
        est_totalfluid ~ "continuous2",
        freq_coffee ~ "continuous",
        freq_soda ~ "continuous",
        fiber_score ~ "continuous"
      ),
      label = list(
        kegel_freq ~ "Kegel Frequency Score (1-6)",
        fiber_guess ~ "Perceived Fiber Intake",
        fluid_guess ~ "Perceived Fluid Intake",
        est_totalfluid ~ "Estimated Daily Fluid Intake (oz)",
        freq_coffee ~ "Estimated Coffee Servings Score (0-5)",
        freq_soda ~ "Estimated Soda Servings Score (0-5)",
        fiber_score ~ "Fiber Intake Score (0-36)"
      ),
      statistic = list(all_continuous() ~ "{mean} ({sd})",
                       # Median (IQR) for est_totalfluid
                       est_totalfluid ~ "{median} ({p25}, {p75})"
                       ),
      digits = all_continuous() ~ 1
    ) |> 
    add_p() |> 
    italicize_levels() |> 
    bold_labels()

}

# Baseline
quest_tbl_base <- quest_tbl(df_behx_bl)
# 1 month
quest_tbl_1mo <- quest_tbl(df_behx_1mo)
# 3 month
quest_tbl_3mo <- quest_tbl(df_behx_3mo)
# 6 month
quest_tbl_6mo <- quest_tbl(df_behx_6mo)

# combine tables
tbl_merge(list(quest_tbl_base, quest_tbl_1mo, quest_tbl_3mo, quest_tbl_6mo), 
          tab_spanner = c("Baseline", "1 Month", "3 Months", "6 Months"))


```


@tbl-pad-use summarizes the longitudinal data on pad use and patterns in using the toilet at baseline, 1 month, 3 months, and 6 months.

```{r}
#| label: tbl-pad-use
#| tbl-cap: Longitudinal responses on pad use and patterns in using the toilet.

# Function to tabulate cross-sectional data
# on pad use at baseline, 1 month, 3 months, and 6 months
pad_use_tbl <- function(df_behx_xx){

  df_behx_xx |> 
    tbl_summary(
      by = rand_round_2,
      include = c(
        panty_liner, pads, undergarments, something_else, nothing,
        use_liner, use_pads, use_depends, incont_money, 
        voidsovernight, daytimevoids, voidinterval
      ),
      type = list(
        # panty_liner ~ "categorical",
        # pads ~ "categorical",
        # undergarments ~ "categorical",
        # something_else ~ "categorical",
        # nothing ~ "categorical",
        use_liner ~ "continuous",
        use_pads ~ "continuous",
        use_depends ~ "continuous",
        incont_money ~ "categorical",
        voidsovernight ~ "continuous",
        daytimevoids ~ "categorical",
        voidinterval ~ "categorical"
        
      ),
      label = list(
        panty_liner ~ "Panty Liner Use",
        pads ~ "Pads Use",
        undergarments ~ "Undergarments Use",
        something_else ~ "Something Else Use",
        nothing ~ "Nothing Use",
        use_liner ~ "Panty Liners per 24 hours",
        use_pads ~ "Pads per 24 hours",
        use_depends ~ "Undergarments per 24 hours",
        incont_money ~ "Estimated Money Spent in the Last Month",
        voidsovernight ~ "Estimated Voids Overnight",
        daytimevoids ~ "Estimated Voids During the Day",
        voidinterval ~ "Time Between Trips to Toilet"
      ),
      statistic = all_continuous() ~ "{mean} ({sd})",
      digits = all_continuous() ~ 1
    ) |> 
    add_p() |> 
    italicize_levels() |> 
    bold_labels()

}

# Baseline
pad_use_tbl_base <- pad_use_tbl(df_behx_bl)
# 1 month
pad_use_tbl_1mo <- pad_use_tbl(df_behx_1mo)
# 3 month
pad_use_tbl_3mo <- pad_use_tbl(df_behx_3mo)
# 6 month
pad_use_tbl_6mo <- pad_use_tbl(df_behx_6mo)
# combine tables
tbl_merge(list(pad_use_tbl_base, pad_use_tbl_1mo, pad_use_tbl_3mo, pad_use_tbl_6mo), 
          tab_spanner = c("Baseline", "1 Month", "3 Months", "6 Months"))

```




## Current bladder/bowel symptoms
@tbl-bladder-symptoms summarizes the longitudinal data on bladder/bowel symptoms at baseline, 1 month, 3 months, and 6 months.

```{r}
#| label: tbl-bladder-symptoms
#| tbl-cap: Longitudinal responses on bladder/bowel symptoms.

# Function to tabulate cross-sectional data
# on bladder symptoms at baseline, 1 month, 3 months, and 6 months
bladder_symptoms_tbl <- function(df_behx_xx){

  df_behx_xx |> 
    tbl_summary(
      by = rand_round_2,
      include = c(
        fvq_bmconst, fvq_bmdiarr, fvq_bmconsist, fvq_bmconsist_cat,
        iciqui_urineleak_cat, 
        bladderseekhx, bowelseekhx
      ),
      type = list(
        # fvq_bmconst ~ "continuous",
        # fvq_bmdiarr ~ "continuous",
        fvq_bmconsist ~ "continuous"
        # iciqui_urineleak_cat ~ "categorical"
      ),
      label = list(
        fvq_bmconst ~ "Constipation Frequency Last Month",
        fvq_bmdiarr ~ "Diarrhea Frequency Last Month",
        fvq_bmconsist ~ "Bristol Stool Type Score (1-7)",
        fvq_bmconsist_cat ~ "Bristol Stool Type Category",
        iciqui_urineleak_cat ~ "Types of Urinary Incontinence",
        bladderseekhx ~ "Ever Talked to HP about Bladder Symptoms",
        bowelseekhx ~ "Ever Talked to HP about Bowel Symptoms"
      ),
      statistic = all_continuous() ~ "{mean} ({sd})",
      digits = all_continuous() ~ 1
    ) |> 
    add_p() |> 
    italicize_levels() |> 
    bold_labels()

}

# Baseline
bladder_symptoms_tbl_base <- bladder_symptoms_tbl(df_behx_bl)
# 1 month
bladder_symptoms_tbl_1mo <- bladder_symptoms_tbl(df_behx_1mo)
# 3 month
bladder_symptoms_tbl_3mo <- bladder_symptoms_tbl(df_behx_3mo)
# 6 month
bladder_symptoms_tbl_6mo <- bladder_symptoms_tbl(df_behx_6mo)
# combine tables
tbl_merge(list(bladder_symptoms_tbl_base, bladder_symptoms_tbl_1mo, bladder_symptoms_tbl_3mo, bladder_symptoms_tbl_6mo), 
          tab_spanner = c("Baseline", "1 Month", "3 Months", "6 Months"))

```


